[versions]
spring-boot = "3.5.3"
dependency-management = "1.1.7"

# INFO
project-group = "com.mople"
application-version = "0.0.1-SNAPSHOT"

spring-cloud = "2025.0.0"

# SECURE
bouncy-castle = "1.78.1"
jwt = "0.12.6"

# CLINET
okhttp = "4.12.0"

# OCI
oci = "1.4.3"

# ORM
persistence = "3.10.3"
mapper = "1.6.3"
lombok-mapper = "0.2.0"
querydsl = "7.0"

# SWAGGER
swagger = "2.8.9"

# LOGGING
datasource-proxy = "1.11.0"
logback-encoder = "8.1"

# FIREBASE
firebase = "9.5.0"

# TEST
data-faker = "2.4.4"
fixture-monkey = "1.1.14"
mockito = "5.14.0"

[libraries]
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-starter-aop = { module = "org.springframework.boot:spring-boot-starter-aop" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security" }
spring-boot-starter-oauth2-client = { module = "org.springframework.boot:spring-boot-starter-oauth2-client" }
spring-boot-starter-thymeleaf = { module = "org.springframework.boot:spring-boot-starter-thymeleaf" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor" }

spring-cloud-starter-openfeign = { module = "org.springframework.cloud:spring-cloud-starter-openfeign" }

thymeleaf-extras-springsecurity6 = { module = "org.thymeleaf.extras:thymeleaf-extras-springsecurity6" }
bouncy-castle = { module = "org.bouncycastle:bcpkix-jdk18on", version.ref = "bouncy-castle" }

jwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jwt" }
jwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jwt" }
jwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jwt" }

thymeleaf-layout-dialect = { module = "nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect" }

okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }

oci-storage = { module = "com.oracle.cloud.spring:spring-cloud-oci-starter-storage" }

lombok = { module = "org.projectlombok:lombok" }

postgresql = { module = "org.postgresql:postgresql" }

hypersistence-utils = { module = "io.hypersistence:hypersistence-utils-hibernate-63", version.ref = "persistence" }

mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapper" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapper" }
lombok-mapstruct-binding = { module = "org.projectlombok:lombok-mapstruct-binding", version.ref = "lombok-mapper" }

springdoc-openapi = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "swagger" }

querydsl-jpa = { module = "io.github.openfeign.querydsl:querydsl-jpa", version.ref = "querydsl" }
querydsl-apt = { module = "io.github.openfeign.querydsl:querydsl-apt", version.ref = "querydsl" }

jakarta-annotation-api = { module = "jakarta.annotation:jakarta.annotation-api" }
jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api" }

datasource-proxy = { module = "net.ttddyy:datasource-proxy", version.ref = "datasource-proxy" }
logstash-logback-encoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logback-encoder" }

spring-boot-starter-cache = { module = "org.springframework.boot:spring-boot-starter-cache" }
caffeine = { module = "com.github.ben-manes.caffeine:caffeine" }

spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus" }

firebase-admin = { module = "com.google.firebase:firebase-admin", version.ref = "firebase" }

datafaker = { module = "net.datafaker:datafaker", version.ref = "data-faker" }

junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-security-test = { module = "org.springframework.security:spring-security-test" }
fixture-monkey-starter = { module = "com.navercorp.fixturemonkey:fixture-monkey-starter", version.ref = "fixture-monkey" }

mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }

[bundles]
spring-boot-web = [
    "spring-boot-starter",
    "spring-boot-starter-web",
    "spring-boot-starter-aop",
    "spring-boot-starter-validation"
]

spring-security = [
    "spring-boot-starter-security",
    "thymeleaf-extras-springsecurity6",
    "spring-boot-starter-oauth2-client"
]

jwt = ["jwt-api", "jwt-impl", "jwt-jackson"]

template = [
    "spring-boot-starter-thymeleaf",
    "thymeleaf-layout-dialect"
]

test = [
    "spring-boot-starter-test",
    "spring-security-test",
    "fixture-monkey-starter"
]

[plugins]
java = { id = "java" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "dependency-management" }