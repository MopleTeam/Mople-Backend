[api]
enabled = true
address = "0.0.0.0:8686"

# 내부 API 로그 수집
[sources.internal_api_logs]
type = "file"
include = ["/etc/vector/logs/internal-api*.log"]
read_from = "beginning"

# 외부 API 로그 수집
[sources.external_api_logs]
type = "file"
include = ["/etc/vector/logs/external-api*.log"]
read_from = "beginning"

# 비즈니스 로직 로그 수집
[sources.business_logic_logs]
type = "file"
include = ["/etc/vector/logs/business-logic*.log"]
read_from = "beginning"

# 슬로우 쿼리 로그 수집
[sources.slow_query_logs]
type = "file"
include = ["/etc/vector/logs/slow-query*.log"]
read_from = "beginning"

# 예외 로그 수집
[sources.exception_logs]
type = "file"
include = ["/etc/vector/logs/exception*.log"]
read_from = "beginning"

# 내부 API 로그 파싱
[transforms.parse_internal_api_logs]
type = "remap"
inputs = ["internal_api_logs"]
source = '''
. = parse_json!(.message)

.requestId = to_string!(.requestId)
.userInfo = to_string!(.userInfo)
.feature = to_string!(.feature)
.level = to_string!(.level)

.log_type = "internal-api"
'''

# 외부 API 로그 파싱
[transforms.parse_external_api_logs]
type = "remap"
inputs = ["external_api_logs"]
source = '''
. = parse_json!(.message)

.requestId = to_string!(.requestId)
.userInfo = to_string!(.userInfo)
.feature = to_string!(.feature)
.level = to_string!(.level)

.log_type = "external-api"
'''

# 비즈니스 로직 로그 파싱
[transforms.parse_business_logic_logs]
type = "remap"
inputs = ["business_logic_logs"]
source = '''
. = parse_json!(.message)

.requestId = to_string!(.requestId)
.userInfo = to_string!(.userInfo)
.feature = to_string!(.feature)
.level = to_string!(.level)

.log_type = "business_logic"
'''

# 슬로우 쿼리 로그 파싱
[transforms.parse_slow_query_logs]
type = "remap"
inputs = ["slow_query_logs"]
source = '''
. = parse_json!(.message)

.requestId = to_string!(.requestId)
.userInfo = to_string!(.userInfo)
.feature = to_string!(.feature)
.level = to_string!(.level)

.log_type = "slow_query"
'''

# 예외 로그 파싱
[transforms.parse_exception_logs]
type = "remap"
inputs = ["exception_logs"]
source = '''
. = parse_json!(.message)

.requestId = to_string!(.requestId)
.userInfo = to_string!(.userInfo)
.feature = to_string!(.feature)
.level = to_string!(.level)

.log_type = "exception"
'''

# Loki로 전송
[sinks.loki_sink]
type = "loki"
inputs = [
    "parse_internal_api_logs",
    "parse_external_api_logs",
    "parse_business_logic_logs",
    "parse_slow_query_logs",
    "parse_exception_logs",
]
endpoint = "http://loki:3100"
encoding.codec = "json"

# 라벨 설정
labels.log_type = "{{ log_type }}"
labels.feature = "{{ .feature }}"
labels.requestId = "{{ .requestId }}"
labels.level = "{{ .level }}"

[sinks.loki_sink.batch]
max_bytes = 1048576
timeout_secs = 5